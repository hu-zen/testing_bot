//=============================Motor Controll with Switchable Modes (ROS Method)======================
// Versi 7.2 - Mode diganti via ROS Topic untuk menghindari konflik serial.
//====================================================================================================

#include <Servo.h>
#include <HB25MotorControl.h>
#include <ros.h>
#include <geometry_msgs/Twist.h>
#include <std_msgs/String.h> // Tambahkan ini untuk menerima perintah mode

// ... (Deklarasi pin, motor, dan variabel kecepatan tetap sama) ...
int control_mode = 0; 
int target_left_speed = 0, target_right_speed = 0;
int current_left_speed = 0, current_right_speed = 0;
unsigned long lastUpdateTime = 0;
const int update_interval = 10;
const int speed_step = 2;

ros::NodeHandle nh;

// Callback untuk perintah kecepatan dari joystick/navigasi
void twistCallback(const geometry_msgs::Twist& twist_msg) {
  // ... (Logika kalkulasi kecepatan dari Twist tetap sama) ...
  int linear_speed = (int)(twist_msg.linear.x * 300);
  int angular_speed = (int)(twist_msg.angular.z * 300);
  target_left_speed = linear_speed - angular_speed;
  target_right_speed = linear_speed + angular_speed;
  target_left_speed = constrain(target_left_speed, -500, 500);
  target_right_speed = constrain(target_right_speed, -500, 500);
}

// --- FUNGSI BARU: Callback untuk perintah ganti mode ---
void modeCallback(const std_msgs::String& msg) {
  String command = msg.data;
  if (command.equalsIgnoreCase("before")) {
    control_mode = 1;
    nh.loginfo("Mode switched to: BEFORE (Instant Motion)");
  } else if (command.equalsIgnoreCase("after")) {
    control_mode = 2;
    nh.loginfo("Mode switched to: AFTER (Smooth Motion)");
  } else if (command.equalsIgnoreCase("stop")) {
    control_mode = 0;
    nh.loginfo("Mode switched to: STOP (Motors Disabled)");
  }
}

ros::Subscriber<geometry_msgs::Twist> sub_vel("cmd_vel", &twistCallback);
// --- SUBSCRIBER BARU untuk ganti mode ---
ros::Subscriber<std_msgs::String> sub_mode("mode_command", &modeCallback);

void setup() {
  nh.getHardware()->setBaud(115200);
  nh.initNode();
  nh.subscribe(sub_vel);
  nh.subscribe(sub_mode); // Daftarkan subscriber baru

  motorControlL.begin();
  motorControlR.begin();
  
  delay(500); // Jeda singkat untuk memastikan semua siap
  nh.loginfo("Switchable motor controller ready.");
}

void loop() {
  nh.spinOnce();
  
  // --- EKSEKUSI BERDASARKAN MODE YANG AKTIF (Logika ini tetap sama) ---
  if (control_mode == 1) { /* ... logika mode BEFORE ... */ }
  else if (control_mode == 2) { /* ... logika mode AFTER ... */ }
  else { /* ... logika mode STOP ... */ }
  // (Salin-tempel logika if/else if/else dari program gabungan Anda sebelumnya ke sini)
}
